diff -Naur linux_org/drivers/net/ethernet/faraday/ftgmac100.c linux/drivers/net/ethernet/faraday/ftgmac100.c
--- linux_org/drivers/net/ethernet/faraday/ftgmac100.c	2021-05-06 16:10:25.412617549 +0800
+++ linux/drivers/net/ethernet/faraday/ftgmac100.c	2021-05-07 12:48:14.719854123 +0800
@@ -25,8 +25,9 @@
 #include <linux/if_vlan.h>
 #include <linux/of_net.h>
 #include <net/ip.h>
+#if 0 //Marked for ignore open source NCSI 
 #include <net/ncsi.h>
-
+#endif
 #include "ftgmac100.h"
 
 #define DRV_NAME	"ftgmac100"
@@ -1480,17 +1481,21 @@
 		/* If using NC-SI, set our carrier on and start the stack */
 		netif_carrier_on(netdev);
 
+#if 0 //Marked for ignore open source NCSI 
 		/* Start the NCSI device */
 		err = ncsi_start_dev(priv->ndev);
 		if (err)
 			goto err_ncsi;
+#endif		
 	}
 
 	return 0;
-
+	
+#if 0 //Marked for ignore open source NCSI 
  err_ncsi:
 	napi_disable(&priv->napi);
 	netif_stop_queue(netdev);
+#endif	
  err_alloc:
 	ftgmac100_free_buffers(priv);
 	free_irq(netdev->irq, netdev);
@@ -1522,9 +1527,10 @@
 	netif_napi_del(&priv->napi);
 	if (netdev->phydev)
 		phy_stop(netdev->phydev);
+#if 0 //Marked for ignore open source NCSI 	
 	else if (priv->use_ncsi)
 		ncsi_stop_dev(priv->ndev);
-
+#endif
 	ftgmac100_stop_hw(priv);
 	free_irq(netdev->irq, netdev);
 	ftgmac100_free_buffers(priv);
@@ -1601,8 +1607,10 @@
 #ifdef CONFIG_NET_POLL_CONTROLLER
 	.ndo_poll_controller	= ftgmac100_poll_controller,
 #endif
+#if 0 //Marked for ignore open source NCSI 
 	.ndo_vlan_rx_add_vid	= ncsi_vlan_rx_add_vid,
 	.ndo_vlan_rx_kill_vid	= ncsi_vlan_rx_kill_vid,
+#endif	
 };
 
 static int ftgmac100_setup_mdio(struct net_device *netdev)
@@ -1707,7 +1715,7 @@
 	mdiobus_unregister(priv->mii_bus);
 	mdiobus_free(priv->mii_bus);
 }
-
+#if 0 //Marked for ignore open source NCSI 
 static void ftgmac100_ncsi_handler(struct ncsi_dev *nd)
 {
 	if (unlikely(nd->state != ncsi_dev_state_functional))
@@ -1716,7 +1724,7 @@
 	netdev_dbg(nd->dev, "NCSI interface %s\n",
 		   nd->link_up ? "up" : "down");
 }
-
+#endif
 static void ftgmac100_setup_clk(struct ftgmac100 *priv)
 {
 	priv->clk = devm_clk_get(priv->dev, NULL);
@@ -1817,6 +1825,7 @@
 		priv->txdes0_edotr_mask = BIT(15);
 	}
 
+#if 0 //Marked for ignore open source NCSI 
 	if (np && of_get_property(np, "use-ncsi", NULL)) {
 		if (!IS_ENABLED(CONFIG_NET_NCSI)) {
 			dev_err(&pdev->dev, "NCSI stack not enabled\n");
@@ -1856,6 +1865,35 @@
 		if (err)
 			goto err_setup_mdio;
 	}
+#endif
+	
+	if (np && of_get_property(np, "fixed-link", NULL)){
+		struct phy_device *phy;
+
+		phy = of_phy_get_and_connect(priv->netdev, np,
+					     &ftgmac100_adjust_link);
+		if (!phy) {
+			dev_err(&pdev->dev, "Failed to connect to phy\n");
+			goto err_setup_mdio;
+		}
+
+		/* Indicate that we support PAUSE frames (see comment in
+		 * Documentation/networking/phy.txt)
+		 */
+		phy_support_asym_pause(phy);
+
+		/* Display what we found */
+		phy_attached_info(phy);
+	}else{
+		priv->use_ncsi = false;
+		err = ftgmac100_setup_mdio(netdev);
+		if (err)
+		{
+			//Enable interface for NCSI usage
+			dev_info(&pdev->dev, "Using NCSI interface\n");
+			priv->use_ncsi = true;
+		}
+	}
 
 	if (priv->is_aspeed)
 		ftgmac100_setup_clk(priv);
@@ -1868,10 +1906,10 @@
 	netdev->hw_features = NETIF_F_RXCSUM | NETIF_F_HW_CSUM |
 		NETIF_F_GRO | NETIF_F_SG | NETIF_F_HW_VLAN_CTAG_RX |
 		NETIF_F_HW_VLAN_CTAG_TX;
-
+#if 0 //Marked for ignore open source NCSI 
 	if (priv->use_ncsi)
 		netdev->hw_features |= NETIF_F_HW_VLAN_CTAG_FILTER;
-
+#endif
 	/* AST2400  doesn't have working HW checksum generation */
 	if (np && (of_device_is_compatible(np, "aspeed,ast2400-mac")))
 		netdev->hw_features &= ~NETIF_F_HW_CSUM;
@@ -1904,9 +1942,11 @@
 
 	return 0;
 
+#if 0 //Marked for ignore open source NCSI 
 err_ncsi_dev:
 	if (priv->ndev)
 		ncsi_unregister_dev(priv->ndev);
+#endif
 err_register_netdev:
 	ftgmac100_destroy_mdio(netdev);
 err_setup_mdio:
@@ -1927,8 +1967,11 @@
 	netdev = platform_get_drvdata(pdev);
 	priv = netdev_priv(netdev);
 
+#if 0 //Marked for ignore open source NCSI 
 	if (priv->ndev)
 		ncsi_unregister_dev(priv->ndev);
+#endif
+
 	unregister_netdev(netdev);
 
 	clk_disable_unprepare(priv->clk);
